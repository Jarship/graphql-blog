type Query {
  active: String!
  feed: Feed!
  blog(id: ID!): BlogPost
  unPublished: [BlogPost!]!
  getUser: User
}

type BlogPost {
  id: ID!
  title: String!
  post: String!
  author: User!
  editors: [User!]!
}

type Feed {
  blogs: [BlogPost!]!
  count: Int!
}

type User {
  id: ID!
  name: String!
  email: String!
  photo: String
  posts: [BlogPost!]!
  status: String!
  invitations: [String!]!
}

type AuthPayload {
  token: String
  user: User
}

type Mutation {
  signInUser (email: String!, password: String!): AuthPayload
  createUser (email: String!, name: String!, password: String!, invite: String!): AuthPayload
  createInvite: String!
  expireInvite (invite: String!): String
  markVisitor (ipAddress: String!): Boolean
}